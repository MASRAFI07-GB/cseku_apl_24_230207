#include <bits/stdc++.h>
using namespace std;
float find_value(vector<char> v)
{
    float val = 0;
    int x = 1;
    for (int k = v.size() - 1; k >= 0; k--)
    {
        val += (x * (v[k] - 48));
        x *= 10;
    }
    return val;
}

// evaluateing only one term
float fun(string s1, float x, float y)
{

    int n2 = s1.size();
    string s;
    int n1 = 0;
    if (s1[0] != '+' && s1[0] != '-')
    {
        s = s1;
        n1 = n2;
    }
    else
    {
        n1 = 0;
        for (int z = 1; z < n2; z++)
        {
            if (s1[z] == '=')
                break;
            s.push_back(s1[z]);
            n1 += 1;
        }
        // n1 -= 1;
    }

    float sum = 0;

    int index = 0;
    float coef_val = 0;
    if (s[0] >= 48 && s[0] <= 57)
    {

        vector<char> v;
        int j = 0;
        for (j = 0; j < n1; j++)
        {
            if (s[j] >= 48 && s[j] <= 57)
            {
                v.push_back(s[j]);
            }
            else
                break;
        }
        index = j;
        coef_val = find_value(v);
    }
    else
        coef_val = 1;

    // the first char is x
    if (index < n1)
    {
        if (s[index] == 'x')
        {
            float sumx = 0;
            int indy = index + 1;
            if (index + 1 < n1 && s[index + 1] == '^')
            {
                vector<char> v1;

                int l = 0;
                for (l = index + 2; l < n1; l++)
                {
                    if (s[l] >= 48 && s[l] <= 57)
                    {
                        v1.push_back(s[l]);
                    }
                    else
                        break;
                }

                float val1 = find_value(v1);
                // done value of x
                float sum1 = pow(x, val1);
                sumx = sum1;
                indy = l;
            }
            else
            {
                sumx = x;
            }

            if (indy < n1)
            {
                float sumy = 0;
                if (indy + 1 < n1 && s[indy + 1] == '^')
                {
                    vector<char> v1;

                    int l = 0;
                    for (l = indy + 2; l < n1; l++)
                    {
                        if (s[l] >= 48 && s[l] <= 57)
                        {
                            v1.push_back(s[l]);
                        }
                        else
                            break;
                    }

                    float val1 = find_value(v1);
                    float sum2 = pow(y, val1);
                    sumy = sum2;
                }
                else
                    sumy = y;

                sum = coef_val * sumx * sumy;
            }
            else
            {
                sum = coef_val * sumx;
            }

            // cout<<"sumy="<<sumy<<endl;

            // sum = coef_val * sumx * sumy;
            // cout<<"sum when x="<<sum<<endl;
        }

        // the first char is y
        else if (s[index] == 'y')
        {
            float sumy = 0;
            int indx = index + 1;
            if (index + 1 < n1 && s[index + 1] == '^')
            {
                vector<char> v1;

                int l = 0;
                for (l = index + 2; l < n1; l++)
                {
                    if (s[l] >= 48 && s[l] <= 57)
                    {
                        v1.push_back(s[l]);
                    }
                    else
                        break;
                }

                float val1 = find_value(v1);
                // done value of y
                float sum1 = pow(y, val1);
                sumy = sum1;
                indx = l;
            }
            else
            {
                sumy = y;
            }

            if (indx < n1)
            {
                float sumx = 0;
                if (indx + 1 < n1 && s[indx + 1] == '^')
                {
                    vector<char> v1;
                    int l = 0;
                    for (l = indx + 2; l < n1; l++)
                    {
                        if (s[l] >= 48 && s[l] <= 57)
                        {
                            v1.push_back(s[l]);
                        }
                        else
                            break;
                    }

                    float val1 = find_value(v1);
                    float sum2 = pow(x, val1);
                    sumx = sum2;
                }
                else
                    sumx = x;

                sum = coef_val * sumx * sumy;
            }
            else
            {
                sum = coef_val * sumy;
            }
        }
        if (s1[0] == '-')
        {
            sum *= (-1);
        }
    }
    else
    {
        sum = coef_val;
        if (s1[0] == '-')
            sum *= (-1);
    }

    return sum;
}

// making sum term by term then marging them and returning
float fun_value(string s, float ini_x, float ini_y)
{
    int n = s.size();
    int cnt = 0;
    float sum = 0;
    for (int i = 0; i < n; i += cnt)
    {
        cnt = 0;
        string s1;
        for (int j = i; j < n; j++)
        {
            if (i != j && (s[j] == '+' || s[j] == '-'))
                break;
            s1.push_back(s[j]);
            cnt++;
        }

        float val = fun(s1, ini_x, ini_y);

        sum += val;
    }
    return sum;
}

void print(vector<int>v)
{
    for(auto it:v)
    cout<<it<<" ";
    cout<<endl;
}

int main()
{
    
    vector<int> v = {1, 2, 3, 4, 5};
    print(v);
    v.erase(v.begin()+0,v.begin()+5);
    print(v);

}

// x^2-4x-10=0
//  -3x^3y^2+10x-11y^2+12xy-20=100
